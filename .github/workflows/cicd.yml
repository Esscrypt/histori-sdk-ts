name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feat/*'
  pull_request:
    branches:
      - main
      - 'feat/*'
  workflow_dispatch:
    inputs:
      major_version_bump:
        description: 'Bump the major version'
        required: false
        default: 'false'

jobs:
  # Test job that runs on both main and feat/* branches
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run tests
      - name: Run tests
        run: npm test

  # Build and publish job that only runs on the main branch
  build-and-publish:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      # Set up npm authentication
      - name: Set npm registry and authenticate
        run: |
          npm set registry https://registry.npmjs.org/
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # Set Git user identity
      - name: Set Git user identity
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build the project
      - name: Build project
        run: npm run build

      # Generate documentation
      - name: Build Documentation
        run: npm run docs

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

      - name: Bump version and push changes
        run: |
          # Set the version bump type
          if [ "${{ github.event.inputs.major_version_bump }}" == "true" ]; then
            VERSION_BUMP="major"
          else
            VERSION_BUMP="patch"
          fi

          # Get the new version without creating a tag yet
          NEW_VERSION=$(npm version $VERSION_BUMP --no-git-tag-version)
          NEW_TAG="v$NEW_VERSION"

          # Delete the local tag if it exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            git tag -d "$NEW_TAG"
          fi

          # Delete the remote tag if it exists
          if git ls-remote --tags origin | grep -q "refs/tags/$NEW_TAG"; then
            git push origin :refs/tags/$NEW_TAG
          fi

          # Commit the version bump and create a new tag
          npm version $VERSION_BUMP -m "chore: bump $VERSION_BUMP version to %s"

          # Push changes to the repository
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      
      # Publish to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}